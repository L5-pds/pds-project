package app.views.ruben;

import java.awt.BorderLayout;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.text.DecimalFormat;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.ui.RefineryUtilities;

public class Chart extends javax.swing.JFrame {
    public JPanel contentPane;
    public ChartPanel pan;
    public Calcul ca;
    DecimalFormat df = new DecimalFormat("0.00");// Convertir un double avec 2 chiffres apres la virgule

    /**
     * Creates new form Chart
     */
    public Chart(Calcul ca) {
        this.ca = ca;
        initComponents();
        graph();
        LineChart lc = new LineChart("Restant à payer selon les années", "Restant à payer selon les années", ca.data);
        lc.setVisible(true);
        lc.setSize(500, 500);
        XY_LineChart x = new XY_LineChart("LineChart", ca.data);
        x.setVisible(true);
        x.setSize(500, 500);
        
    }

   public void graph() {		
        DefaultPieDataset test = new DefaultPieDataset();

        test.setValue("Capital amorti "+df.format(ca.totalmensualite/(ca.totalassurance+ca.totalmensualite+ca.totalinteret)*100)+"%", (ca.totalmensualite/(ca.totalassurance+ca.totalmensualite+ca.totalinteret)*100));
        test.setValue("Interets "+(df.format(ca.totalinteret/(ca.totalassurance+ca.totalmensualite+ca.totalinteret)*100))+"%", (ca.totalinteret/(ca.totalassurance+ca.totalmensualite+ca.totalinteret)*100));
        test.setValue("Assurance "+(df.format(ca.totalassurance/(ca.totalassurance+ca.totalmensualite+ca.totalinteret)*100))+"%",(ca.totalassurance/(ca.totalassurance+ca.totalmensualite+ca.totalinteret)*100));
        JFreeChart chart = ChartFactory.createPieChart("Répartition Capital Amorti/Interets/Assurance", test, true, true, true);
        pan = new ChartPanel(chart, false);
        pan.setBounds(0, 0, 390, 300);
        getContentPane().add(pan, BorderLayout.NORTH);
        this.setVisible(true);
        this.setSize(500,500);
        this.setExtendedState(this.MAXIMIZED_BOTH);  
        
	}
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        printChart = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        printChart.setText("Imprimer");
        printChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printChartActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(388, Short.MAX_VALUE)
                .addComponent(printChart)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(printChart)
                .addContainerGap(392, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void printChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printChartActionPerformed
       // TODO add your handling code here:
       PrinterJob job = PrinterJob.getPrinterJob();
         job.setPrintable(pan);
         boolean ok = job.printDialog();
         if (ok) {
             try {
                  job.print();
             } catch (PrinterException ex) {
              /* The job did not successfully complete */
             }
         }
       
    }//GEN-LAST:event_printChartActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton printChart;
    // End of variables declaration//GEN-END:variables
}
